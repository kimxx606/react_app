{"ast":null,"code":"var _jsxFileName = \"D:\\\\01_study\\\\react_app\\\\src\\\\components\\\\Chat\\\\ChatInterface_2.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport useChat from '../../hooks/useChat';\nimport ChatMessage from './ChatMessage';\nimport ChatInput from './ChatInput';\nimport SampleQuestions from './SampleQuestions';\nimport Spinner from '../UI/Spinner';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatInterface = ({\n  serviceId,\n  SidebarContent\n}) => {\n  _s();\n  const SERVICE_NAME = \"Sample B\";\n  const SERVICE_DESCRIPTION = \"AI와 대화하며 다양한 질문에 대한 답변을 받아보세요.\";\n  const SAMPLE_QUESTIONS = [\"이 서비스는 어떤 기능을 제공하나요?\", \"NPS 분석이란 무엇인가요?\", \"VOC 데이터를 어떻게 분석할 수 있나요?\", \"D2C 분석에 대해 설명해주세요.\"];\n  const {\n    messages,\n    isLoading,\n    chatContainerRef,\n    bottomRef,\n    sendMessage,\n    handleSampleQuestion\n  } = useChat(serviceId);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-interface\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"service-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"main-title\",\n        children: SERVICE_NAME\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"service-description\",\n        children: SERVICE_DESCRIPTION\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-main-area\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-container\",\n        ref: chatContainerRef,\n        children: [/*#__PURE__*/_jsxDEV(SampleQuestions, {\n          questions: SAMPLE_QUESTIONS,\n          onSelectQuestion: handleSampleQuestion,\n          isLoading: isLoading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this), messages.map((message, index) => /*#__PURE__*/_jsxDEV(ChatMessage, {\n          role: message.role,\n          content: message.content,\n          isError: message.isError\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this)), isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loading-message\",\n          children: /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: bottomRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), SidebarContent && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-sidebar-extra\",\n        children: SidebarContent\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-input-container\",\n      children: /*#__PURE__*/_jsxDEV(ChatInput, {\n        onSendMessage: sendMessage,\n        isLoading: isLoading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatInterface, \"a1HvJNYFlydPrfqYqYQZBz608P8=\", false, function () {\n  return [useChat];\n});\n_c = ChatInterface;\nexport default ChatInterface;\nvar _c;\n$RefreshReg$(_c, \"ChatInterface\");","map":{"version":3,"names":["React","useChat","ChatMessage","ChatInput","SampleQuestions","Spinner","jsxDEV","_jsxDEV","ChatInterface","serviceId","SidebarContent","_s","SERVICE_NAME","SERVICE_DESCRIPTION","SAMPLE_QUESTIONS","messages","isLoading","chatContainerRef","bottomRef","sendMessage","handleSampleQuestion","className","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","questions","onSelectQuestion","map","message","index","role","content","isError","onSendMessage","_c","$RefreshReg$"],"sources":["D:/01_study/react_app/src/components/Chat/ChatInterface_2.jsx"],"sourcesContent":["import React from 'react';\r\nimport useChat from '../../hooks/useChat';\r\nimport ChatMessage from './ChatMessage';\r\nimport ChatInput from './ChatInput';\r\nimport SampleQuestions from './SampleQuestions';\r\nimport Spinner from '../UI/Spinner';\r\n\r\nconst ChatInterface = ({ serviceId, SidebarContent }) => {\r\n  const SERVICE_NAME = \"Sample B\";\r\n  const SERVICE_DESCRIPTION = \"AI와 대화하며 다양한 질문에 대한 답변을 받아보세요.\";\r\n\r\n  const SAMPLE_QUESTIONS = [\r\n    \"이 서비스는 어떤 기능을 제공하나요?\",\r\n    \"NPS 분석이란 무엇인가요?\",\r\n    \"VOC 데이터를 어떻게 분석할 수 있나요?\",\r\n    \"D2C 분석에 대해 설명해주세요.\"\r\n  ];\r\n\r\n  const {\r\n    messages,\r\n    isLoading,\r\n    chatContainerRef,\r\n    bottomRef,\r\n    sendMessage,\r\n    handleSampleQuestion\r\n  } = useChat(serviceId);\r\n\r\n  return (\r\n    <div className=\"chat-interface\">\r\n      {/* 상단 제목 */}\r\n      <div className=\"service-header\">\r\n        <h2 className=\"main-title\">{SERVICE_NAME}</h2>\r\n        <p className=\"service-description\">{SERVICE_DESCRIPTION}</p>\r\n      </div>\r\n\r\n      <div className=\"chat-main-area\">\r\n        {/* 💬 채팅 메시지 영역 */}\r\n        <div className=\"chat-container\" ref={chatContainerRef}>\r\n          {(\r\n            <SampleQuestions\r\n              questions={SAMPLE_QUESTIONS}\r\n              onSelectQuestion={handleSampleQuestion}\r\n              isLoading={isLoading}\r\n            />\r\n          )}\r\n\r\n          {messages.map((message, index) => (\r\n            <ChatMessage\r\n              key={index}\r\n              role={message.role}\r\n              content={message.content}\r\n              isError={message.isError}\r\n            />\r\n          ))}\r\n\r\n          {isLoading && (\r\n            <div className=\"loading-message\">\r\n              <Spinner />\r\n            </div>\r\n          )}\r\n\r\n          {/* 자동 스크롤 포인트 */}\r\n          <div ref={bottomRef} />\r\n        </div>\r\n\r\n        {/* 🔧 각 페이지 전용 사이드바 내용 (선택적 렌더링) */}\r\n        {SidebarContent && (\r\n          <div className=\"chat-sidebar-extra\">\r\n            {SidebarContent}\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {/* 🧾 입력창: 항상 하단 고정 */}\r\n      <div className=\"chat-input-container\">\r\n        <ChatInput\r\n          onSendMessage={sendMessage}\r\n          isLoading={isLoading}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatInterface;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}