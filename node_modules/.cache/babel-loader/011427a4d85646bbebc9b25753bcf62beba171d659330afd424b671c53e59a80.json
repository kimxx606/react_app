{"ast":null,"code":"var _jsxFileName = \"D:\\\\01_study\\\\react_app\\\\src\\\\components\\\\Chat\\\\ChatInterface.jsx\",\n  _s = $RefreshSig$();\n// import React from 'react';\n// import useChat from '../../hooks/useChat';\n// import ChatMessage from './ChatMessage';\n// import ChatInput from './ChatInput';\n// import SampleQuestions from './SampleQuestions';\n// import Spinner from '../UI/Spinner';\n\n// const ChatInterface = ({ serviceId }) => {\n//   const SERVICE_NAME = \"Intellytics AI 대화 서비스\";\n//   const SERVICE_DESCRIPTION = \"AI와 대화하며 다양한 질문에 대한 답변을 받아보세요.\";\n\n//   const SAMPLE_QUESTIONS = [\n//     \"이 서비스는 어떤 기능을 제공하나요?\",\n//     \"NPS 분석이란 무엇인가요?\",\n//     \"VOC 데이터를 어떻게 분석할 수 있나요?\",\n//     \"D2C 분석에 대해 설명해주세요.\"\n//   ];\n\n//   const {\n//     messages,\n//     isLoading,\n//     chatContainerRef,\n//     bottomRef,\n//     sendMessage,\n//     handleSampleQuestion\n//   } = useChat(serviceId);\n\n//   return (\n//     <div className=\"chat-interface\">\n//       {/* 상단 제목 */}\n//       <div className=\"service-header\">\n//         <h2 className=\"main-title\">{SERVICE_NAME}</h2>\n//         <p className=\"service-description\">{SERVICE_DESCRIPTION}</p>\n//       </div>\n\n//       {/* 대표 질문 (초기 화면에만 표시) */}\n//       {(\n//         <SampleQuestions\n//           questions={SAMPLE_QUESTIONS}\n//           onSelectQuestion={handleSampleQuestion}\n//           isLoading={isLoading}\n//         />\n//       )}\n\n//       {/* 💬 채팅 메시지 영역 */}\n//       <div className=\"chat-container\" ref={chatContainerRef}>\n//         {messages.map((message, index) => (\n//           <ChatMessage\n//             key={index}\n//             role={message.role}\n//             content={message.content}\n//             isError={message.isError}\n//           />\n//         ))}\n\n//         {isLoading && (\n//           <div className=\"loading-message\">\n//             <Spinner />\n//           </div>\n//         )}\n\n//         {/* 자동 스크롤 포인트 */}\n//         <div ref={bottomRef} />\n//       </div>\n\n//       {/* 🧾 입력창: 항상 하단 고정 */}\n//       <div className=\"chat-input-container\">\n//         <ChatInput\n//           onSendMessage={sendMessage}\n//           isLoading={isLoading}\n//         />\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default ChatInterface;\n\n// import React from 'react';\n// import useChat from '../../hooks/useChat';\n// import ChatMessage from './ChatMessage';\n// import ChatInput from './ChatInput';\n// import SampleQuestions from './SampleQuestions';\n// import Spinner from '../UI/Spinner';\n\n// const ChatInterface = ({ serviceId, SidebarContent }) => {\n//   const SERVICE_NAME = \"Intellytics AI 대화 서비스\";\n//   const SERVICE_DESCRIPTION = \"AI와 대화하며 다양한 질문에 대한 답변을 받아보세요.\";\n\n//   const SAMPLE_QUESTIONS = [\n//     \"이 서비스는 어떤 기능을 제공하나요?\",\n//     \"NPS 분석이란 무엇인가요?\",\n//     \"VOC 데이터를 어떻게 분석할 수 있나요?\",\n//     \"D2C 분석에 대해 설명해주세요.\"\n//   ];\n\n//   const {\n//     messages,\n//     isLoading,\n//     chatContainerRef,\n//     bottomRef,\n//     sendMessage,\n//     handleSampleQuestion\n//   } = useChat(serviceId);\n\n//   return (\n//     <div className=\"chat-interface\">\n//       {/* 상단 제목 */}\n//       <div className=\"service-header\">\n//         <h2 className=\"main-title\">{SERVICE_NAME}</h2>\n//         <p className=\"service-description\">{SERVICE_DESCRIPTION}</p>\n//       </div>\n\n//       {/* 대표 질문 (초기 화면에만 표시) */}\n//       {messages.length === 0 && (\n//         <SampleQuestions\n//           questions={SAMPLE_QUESTIONS}\n//           onSelectQuestion={handleSampleQuestion}\n//           isLoading={isLoading}\n//         />\n//       )}\n\n//       {/* 💬 채팅 메시지 영역 */}\n//       <div className=\"chat-container\" ref={chatContainerRef}>\n//         {messages.map((message, index) => (\n//           <ChatMessage\n//             key={index}\n//             role={message.role}\n//             content={message.content}\n//             isError={message.isError}\n//           />\n//         ))}\n\n//         {isLoading && (\n//           <div className=\"loading-message\">\n//             <Spinner />\n//           </div>\n//         )}\n\n//         {/* 자동 스크롤 포인트 */}\n//         <div ref={bottomRef} />\n//       </div>\n\n//       {/* 🧾 입력창: 항상 하단 고정 */}\n//       <div className=\"chat-input-container\">\n//         <ChatInput\n//           onSendMessage={sendMessage}\n//           isLoading={isLoading}\n//         />\n//       </div>\n\n//       {/* 🔧 각 페이지 전용 사이드바 내용 (선택적 렌더링) */}\n//       {SidebarContent && (\n//         <div className=\"chat-sidebar-extra\">\n//           {SidebarContent}\n//         </div>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default ChatInterface;\n\nimport React from 'react';\nimport useChat from '../../hooks/useChat';\nimport ChatMessage from './ChatMessage';\nimport ChatInput from './ChatInput';\nimport SampleQuestions from './SampleQuestions';\nimport Spinner from '../UI/Spinner';\n\n// 샘플 페이지별 사이드바 내용\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const SidebarPage1Extra = () => /*#__PURE__*/_jsxDEV(\"div\", {\n  children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n    children: \"Intellytics \\uBD84\\uC11D \\uAC00\\uC774\\uB4DC\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 174,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n    children: [/*#__PURE__*/_jsxDEV(\"li\", {\n      children: \"NPS \\uC810\\uC218 \\uD574\\uC11D\\uBC95\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n      children: \"VOC \\uD074\\uB7EC\\uC2A4\\uD130\\uB9C1 \\uC608\\uC2DC\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n      children: \"\\uBD84\\uC11D \\uB9AC\\uD3EC\\uD2B8 \\uB2E4\\uC6B4\\uB85C\\uB4DC\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 175,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 173,\n  columnNumber: 3\n}, this);\n_c = SidebarPage1Extra;\nexport const SidebarPage2Extra = () => /*#__PURE__*/_jsxDEV(\"div\", {\n  children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n    children: \"D2C \\uBD84\\uC11D \\uD301\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 185,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n    children: [/*#__PURE__*/_jsxDEV(\"li\", {\n      children: \"\\uC774\\uD0C8 \\uACE0\\uAC1D \\uD328\\uD134\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n      children: \"\\uD504\\uB85C\\uBAA8\\uC158 \\uD6A8\\uACFC \\uBD84\\uC11D\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n      children: \"\\uACE0\\uAC1D \\uC138\\uADF8\\uBA3C\\uD2B8 \\uC804\\uB7B5\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 186,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 184,\n  columnNumber: 3\n}, this);\n_c2 = SidebarPage2Extra;\nconst ChatInterface = ({\n  serviceId,\n  SidebarContent\n}) => {\n  _s();\n  const SERVICE_NAME = \"sample A\";\n  const SERVICE_DESCRIPTION = \"AI와 대화하며 다양한 질문에 대한 답변을 받아보세요.\";\n  const SAMPLE_QUESTIONS = [\"이 서비스는 어떤 기능을 제공하나요?\", \"NPS 분석이란 무엇인가요?\", \"VOC 데이터를 어떻게 분석할 수 있나요?\", \"D2C 분석에 대해 설명해주세요.\"];\n  const {\n    messages,\n    isLoading,\n    chatContainerRef,\n    bottomRef,\n    sendMessage,\n    handleSampleQuestion\n  } = useChat(serviceId);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-interface\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"service-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"main-title\",\n        children: SERVICE_NAME\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"service-description\",\n        children: SERVICE_DESCRIPTION\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-main-area\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-container\",\n        ref: chatContainerRef,\n        children: [/*#__PURE__*/_jsxDEV(SampleQuestions, {\n          questions: SAMPLE_QUESTIONS,\n          onSelectQuestion: handleSampleQuestion,\n          isLoading: isLoading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 13\n        }, this), messages.map((message, index) => /*#__PURE__*/_jsxDEV(ChatMessage, {\n          role: message.role,\n          content: message.content,\n          isError: message.isError\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 13\n        }, this)), isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loading-message\",\n          children: /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: bottomRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 9\n      }, this), SidebarContent && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-sidebar-extra\",\n        children: SidebarContent\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-input-container\",\n      children: /*#__PURE__*/_jsxDEV(ChatInput, {\n        onSendMessage: sendMessage,\n        isLoading: isLoading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 215,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatInterface, \"a1HvJNYFlydPrfqYqYQZBz608P8=\", false, function () {\n  return [useChat];\n});\n_c3 = ChatInterface;\nexport default ChatInterface;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"SidebarPage1Extra\");\n$RefreshReg$(_c2, \"SidebarPage2Extra\");\n$RefreshReg$(_c3, \"ChatInterface\");","map":{"version":3,"names":["React","useChat","ChatMessage","ChatInput","SampleQuestions","Spinner","jsxDEV","_jsxDEV","SidebarPage1Extra","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","SidebarPage2Extra","_c2","ChatInterface","serviceId","SidebarContent","_s","SERVICE_NAME","SERVICE_DESCRIPTION","SAMPLE_QUESTIONS","messages","isLoading","chatContainerRef","bottomRef","sendMessage","handleSampleQuestion","className","ref","questions","onSelectQuestion","map","message","index","role","content","isError","onSendMessage","_c3","$RefreshReg$"],"sources":["D:/01_study/react_app/src/components/Chat/ChatInterface.jsx"],"sourcesContent":["// import React from 'react';\r\n// import useChat from '../../hooks/useChat';\r\n// import ChatMessage from './ChatMessage';\r\n// import ChatInput from './ChatInput';\r\n// import SampleQuestions from './SampleQuestions';\r\n// import Spinner from '../UI/Spinner';\r\n\r\n// const ChatInterface = ({ serviceId }) => {\r\n//   const SERVICE_NAME = \"Intellytics AI 대화 서비스\";\r\n//   const SERVICE_DESCRIPTION = \"AI와 대화하며 다양한 질문에 대한 답변을 받아보세요.\";\r\n\r\n//   const SAMPLE_QUESTIONS = [\r\n//     \"이 서비스는 어떤 기능을 제공하나요?\",\r\n//     \"NPS 분석이란 무엇인가요?\",\r\n//     \"VOC 데이터를 어떻게 분석할 수 있나요?\",\r\n//     \"D2C 분석에 대해 설명해주세요.\"\r\n//   ];\r\n\r\n//   const {\r\n//     messages,\r\n//     isLoading,\r\n//     chatContainerRef,\r\n//     bottomRef,\r\n//     sendMessage,\r\n//     handleSampleQuestion\r\n//   } = useChat(serviceId);\r\n\r\n//   return (\r\n//     <div className=\"chat-interface\">\r\n//       {/* 상단 제목 */}\r\n//       <div className=\"service-header\">\r\n//         <h2 className=\"main-title\">{SERVICE_NAME}</h2>\r\n//         <p className=\"service-description\">{SERVICE_DESCRIPTION}</p>\r\n//       </div>\r\n\r\n//       {/* 대표 질문 (초기 화면에만 표시) */}\r\n//       {(\r\n//         <SampleQuestions\r\n//           questions={SAMPLE_QUESTIONS}\r\n//           onSelectQuestion={handleSampleQuestion}\r\n//           isLoading={isLoading}\r\n//         />\r\n//       )}\r\n\r\n//       {/* 💬 채팅 메시지 영역 */}\r\n//       <div className=\"chat-container\" ref={chatContainerRef}>\r\n//         {messages.map((message, index) => (\r\n//           <ChatMessage\r\n//             key={index}\r\n//             role={message.role}\r\n//             content={message.content}\r\n//             isError={message.isError}\r\n//           />\r\n//         ))}\r\n\r\n//         {isLoading && (\r\n//           <div className=\"loading-message\">\r\n//             <Spinner />\r\n//           </div>\r\n//         )}\r\n\r\n//         {/* 자동 스크롤 포인트 */}\r\n//         <div ref={bottomRef} />\r\n//       </div>\r\n\r\n//       {/* 🧾 입력창: 항상 하단 고정 */}\r\n//       <div className=\"chat-input-container\">\r\n//         <ChatInput\r\n//           onSendMessage={sendMessage}\r\n//           isLoading={isLoading}\r\n//         />\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default ChatInterface;\r\n\r\n// import React from 'react';\r\n// import useChat from '../../hooks/useChat';\r\n// import ChatMessage from './ChatMessage';\r\n// import ChatInput from './ChatInput';\r\n// import SampleQuestions from './SampleQuestions';\r\n// import Spinner from '../UI/Spinner';\r\n\r\n// const ChatInterface = ({ serviceId, SidebarContent }) => {\r\n//   const SERVICE_NAME = \"Intellytics AI 대화 서비스\";\r\n//   const SERVICE_DESCRIPTION = \"AI와 대화하며 다양한 질문에 대한 답변을 받아보세요.\";\r\n\r\n//   const SAMPLE_QUESTIONS = [\r\n//     \"이 서비스는 어떤 기능을 제공하나요?\",\r\n//     \"NPS 분석이란 무엇인가요?\",\r\n//     \"VOC 데이터를 어떻게 분석할 수 있나요?\",\r\n//     \"D2C 분석에 대해 설명해주세요.\"\r\n//   ];\r\n\r\n//   const {\r\n//     messages,\r\n//     isLoading,\r\n//     chatContainerRef,\r\n//     bottomRef,\r\n//     sendMessage,\r\n//     handleSampleQuestion\r\n//   } = useChat(serviceId);\r\n\r\n//   return (\r\n//     <div className=\"chat-interface\">\r\n//       {/* 상단 제목 */}\r\n//       <div className=\"service-header\">\r\n//         <h2 className=\"main-title\">{SERVICE_NAME}</h2>\r\n//         <p className=\"service-description\">{SERVICE_DESCRIPTION}</p>\r\n//       </div>\r\n\r\n//       {/* 대표 질문 (초기 화면에만 표시) */}\r\n//       {messages.length === 0 && (\r\n//         <SampleQuestions\r\n//           questions={SAMPLE_QUESTIONS}\r\n//           onSelectQuestion={handleSampleQuestion}\r\n//           isLoading={isLoading}\r\n//         />\r\n//       )}\r\n\r\n//       {/* 💬 채팅 메시지 영역 */}\r\n//       <div className=\"chat-container\" ref={chatContainerRef}>\r\n//         {messages.map((message, index) => (\r\n//           <ChatMessage\r\n//             key={index}\r\n//             role={message.role}\r\n//             content={message.content}\r\n//             isError={message.isError}\r\n//           />\r\n//         ))}\r\n\r\n//         {isLoading && (\r\n//           <div className=\"loading-message\">\r\n//             <Spinner />\r\n//           </div>\r\n//         )}\r\n\r\n//         {/* 자동 스크롤 포인트 */}\r\n//         <div ref={bottomRef} />\r\n//       </div>\r\n\r\n//       {/* 🧾 입력창: 항상 하단 고정 */}\r\n//       <div className=\"chat-input-container\">\r\n//         <ChatInput\r\n//           onSendMessage={sendMessage}\r\n//           isLoading={isLoading}\r\n//         />\r\n//       </div>\r\n\r\n//       {/* 🔧 각 페이지 전용 사이드바 내용 (선택적 렌더링) */}\r\n//       {SidebarContent && (\r\n//         <div className=\"chat-sidebar-extra\">\r\n//           {SidebarContent}\r\n//         </div>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default ChatInterface;\r\n\r\nimport React from 'react';\r\nimport useChat from '../../hooks/useChat';\r\nimport ChatMessage from './ChatMessage';\r\nimport ChatInput from './ChatInput';\r\nimport SampleQuestions from './SampleQuestions';\r\nimport Spinner from '../UI/Spinner';\r\n\r\n// 샘플 페이지별 사이드바 내용\r\nexport const SidebarPage1Extra = () => (\r\n  <div>\r\n    <h3>Intellytics 분석 가이드</h3>\r\n    <ul>\r\n      <li>NPS 점수 해석법</li>\r\n      <li>VOC 클러스터링 예시</li>\r\n      <li>분석 리포트 다운로드</li>\r\n    </ul>\r\n  </div>\r\n);\r\n\r\nexport const SidebarPage2Extra = () => (\r\n  <div>\r\n    <h3>D2C 분석 팁</h3>\r\n    <ul>\r\n      <li>이탈 고객 패턴</li>\r\n      <li>프로모션 효과 분석</li>\r\n      <li>고객 세그먼트 전략</li>\r\n    </ul>\r\n  </div>\r\n);\r\n\r\nconst ChatInterface = ({ serviceId, SidebarContent }) => {\r\n  const SERVICE_NAME = \"sample A\";\r\n  const SERVICE_DESCRIPTION = \"AI와 대화하며 다양한 질문에 대한 답변을 받아보세요.\";\r\n\r\n  const SAMPLE_QUESTIONS = [\r\n    \"이 서비스는 어떤 기능을 제공하나요?\",\r\n    \"NPS 분석이란 무엇인가요?\",\r\n    \"VOC 데이터를 어떻게 분석할 수 있나요?\",\r\n    \"D2C 분석에 대해 설명해주세요.\"\r\n  ];\r\n\r\n  const {\r\n    messages,\r\n    isLoading,\r\n    chatContainerRef,\r\n    bottomRef,\r\n    sendMessage,\r\n    handleSampleQuestion\r\n  } = useChat(serviceId);\r\n\r\n  return (\r\n    <div className=\"chat-interface\">\r\n      {/* 상단 제목 */}\r\n      <div className=\"service-header\">\r\n        <h2 className=\"main-title\">{SERVICE_NAME}</h2>\r\n        <p className=\"service-description\">{SERVICE_DESCRIPTION}</p>\r\n      </div>\r\n\r\n      <div className=\"chat-main-area\">\r\n        {/* 💬 채팅 메시지 영역 */}\r\n        <div className=\"chat-container\" ref={chatContainerRef}>\r\n          {(\r\n            <SampleQuestions\r\n              questions={SAMPLE_QUESTIONS}\r\n              onSelectQuestion={handleSampleQuestion}\r\n              isLoading={isLoading}\r\n            />\r\n          )}\r\n\r\n          {messages.map((message, index) => (\r\n            <ChatMessage\r\n              key={index}\r\n              role={message.role}\r\n              content={message.content}\r\n              isError={message.isError}\r\n            />\r\n          ))}\r\n\r\n          {isLoading && (\r\n            <div className=\"loading-message\">\r\n              <Spinner />\r\n            </div>\r\n          )}\r\n\r\n          {/* 자동 스크롤 포인트 */}\r\n          <div ref={bottomRef} />\r\n        </div>\r\n\r\n        {/* 🔧 각 페이지 전용 사이드바 내용 (선택적 렌더링) */}\r\n        {SidebarContent && (\r\n          <div className=\"chat-sidebar-extra\">\r\n            {SidebarContent}\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {/* 🧾 입력창: 항상 하단 고정 */}\r\n      <div className=\"chat-input-container\">\r\n        <ChatInput\r\n          onSendMessage={sendMessage}\r\n          isLoading={isLoading}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatInterface;\r\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,OAAO,MAAM,qBAAqB;AACzC,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAOC,SAAS,MAAM,aAAa;AACnC,OAAOC,eAAe,MAAM,mBAAmB;AAC/C,OAAOC,OAAO,MAAM,eAAe;;AAEnC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,OAAO,MAAMC,iBAAiB,GAAGA,CAAA,kBAC/BD,OAAA;EAAAE,QAAA,gBACEF,OAAA;IAAAE,QAAA,EAAI;EAAkB;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAI,CAAC,eAC3BN,OAAA;IAAAE,QAAA,gBACEF,OAAA;MAAAE,QAAA,EAAI;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACnBN,OAA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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}