{"ast":null,"code":"var _jsxFileName = \"D:\\\\01_study\\\\react_app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react';\n// import { useSession } from './contexts/SessionContext';\n// import Header from './components/Layout/Header';\n// import Sidebar from './components/Layout/Sidebar';\n// import ChatInterface from './components/Chat/ChatInterface';\n// import ChatInterface_2 from './components/Chat/ChatInterface_2';\n// import './styles/App.css';\n\n// function App() {\n//   const [activePage, setActivePage] = useState('page1');\n//   const { sessionState } = useSession();\n//   const serviceId = 'intellytics-agent';\n\n//   return (\n//     <div className=\"app\">\n//       <Header />\n//       <div className=\"content\">\n//         {/* <Sidebar serviceId={serviceId} /> */}\n//         <Sidebar onSelectPage={setActivePage} activePage={activePage} />\n//         <main className=\"main-content\">\n//           {activePage === 'page1' && <ChatInterface serviceId=\"intellytics-agent\" />}\n//           {activePage === 'page2' && <ChatInterface_2 serviceId=\"intellytics-agent-2\" />}\n//           {/* <ChatInterface serviceId={serviceId} /> */}\n//         </main>\n//       </div>\n//     </div>\n\n//   );\n// }\n\n// export default App; \n\nimport React, { useState, useEffect } from 'react';\nimport Header from './components/Layout/Header';\nimport Sidebar from './components/Layout/Sidebar';\nimport ChatInterface from './components/Chat/ChatInterface';\nimport ChatInterface_2 from './components/Chat/ChatInterface_2';\nimport { SidebarPage1Extra, SidebarPage2Extra } from './components/Chat/ChatInterface';\nimport './styles/App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [activePage, setActivePage] = useState('page1');\n  const [showSidebarOnChat1, setShowSidebarOnChat1] = useState(false);\n\n  // activePage가 변경될 때마다 확인\n  useEffect(() => {\n    // page2가 선택된 경우에만 ChatInterface의 사이드바를 표시\n    setShowSidebarOnChat1(activePage === 'page2');\n  }, [activePage]);\n  const getCurrentPageComponent = () => {\n    if (activePage === 'page1') {\n      // showSidebarOnChat1이 true일 때만(즉, page2가 선택되었을 때만) SidebarContent 표시\n      return /*#__PURE__*/_jsxDEV(ChatInterface, {\n        serviceId: \"page1\",\n        SidebarContent: showSidebarOnChat1 ? /*#__PURE__*/_jsxDEV(SidebarPage2Extra, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 53\n        }, this) : null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 14\n      }, this);\n    } else if (activePage === 'page2') {\n      return /*#__PURE__*/_jsxDEV(ChatInterface_2, {\n        serviceId: \"page2\",\n        SidebarContent: /*#__PURE__*/_jsxDEV(SidebarPage2Extra, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 32\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 14\n      }, this);\n    }\n    return null;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: [/*#__PURE__*/_jsxDEV(Sidebar, {\n        serviceId: activePage,\n        onSelectPage: setActivePage,\n        activePage: activePage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        className: \"main-content\",\n        children: getCurrentPageComponent()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"5JctDuYlw6M+cM0Yh92ezRJwaWw=\");\n_c = App;\nexport default App;\n\n// import React, { useState } from 'react';\n// import Header from './components/Layout/Header';\n// import Sidebar from './components/Layout/Sidebar';\n// // import ChatInterface from './components/Chat/ChatInterface';\n// import ChatInterface_2 from './components/Chat/ChatInterface_2';\n// import ChatInterface, {\n//   SidebarPage1Extra\n// } from './components/Chat/ChatInterface';\n// // import SidebarPage1Extra from './components/Sidebar/SidebarPage1Extra';\n// // import SidebarPage2Extra from './components/Sidebar/SidebarPage2Extra';\n\n// const App = () => {\n//   const [activePage, setActivePage] = useState('page1');\n\n//   return (\n//     <div className=\"app\">\n//       <Header />\n//       <div className=\"content\">\n//         {/* 페이지 메뉴 및 설정 */}\n//         <Sidebar\n//           serviceId={activePage}\n//           activePage={activePage}\n//           onSelectPage={setActivePage}\n//         />\n\n//         {/* 메인 콘텐츠 영역 */}\n//         <main className=\"main-content\">\n//           {activePage === 'page1' && (\n//             <ChatInterface\n//               serviceId=\"page1\"\n//               SidebarContent={<SidebarPage1Extra serviceId=\"page1\" />}\n//             />\n//           )}\n//           {activePage === 'page2' && (\n//             <ChatInterface_2\n//               serviceId=\"page2\"\n//               // SidebarContent={<SidebarPage2Extra serviceId=\"page2\" />}\n//             />\n//           )}\n//         </main>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Header","Sidebar","ChatInterface","ChatInterface_2","SidebarPage1Extra","SidebarPage2Extra","jsxDEV","_jsxDEV","App","_s","activePage","setActivePage","showSidebarOnChat1","setShowSidebarOnChat1","getCurrentPageComponent","serviceId","SidebarContent","fileName","_jsxFileName","lineNumber","columnNumber","className","children","onSelectPage","_c","$RefreshReg$"],"sources":["D:/01_study/react_app/src/App.js"],"sourcesContent":["// import React, { useState } from 'react';\r\n// import { useSession } from './contexts/SessionContext';\r\n// import Header from './components/Layout/Header';\r\n// import Sidebar from './components/Layout/Sidebar';\r\n// import ChatInterface from './components/Chat/ChatInterface';\r\n// import ChatInterface_2 from './components/Chat/ChatInterface_2';\r\n// import './styles/App.css';\r\n\r\n// function App() {\r\n//   const [activePage, setActivePage] = useState('page1');\r\n//   const { sessionState } = useSession();\r\n//   const serviceId = 'intellytics-agent';\r\n  \r\n//   return (\r\n//     <div className=\"app\">\r\n//       <Header />\r\n//       <div className=\"content\">\r\n//         {/* <Sidebar serviceId={serviceId} /> */}\r\n//         <Sidebar onSelectPage={setActivePage} activePage={activePage} />\r\n//         <main className=\"main-content\">\r\n//           {activePage === 'page1' && <ChatInterface serviceId=\"intellytics-agent\" />}\r\n//           {activePage === 'page2' && <ChatInterface_2 serviceId=\"intellytics-agent-2\" />}\r\n//           {/* <ChatInterface serviceId={serviceId} /> */}\r\n//         </main>\r\n//       </div>\r\n//     </div>\r\n\r\n//   );\r\n// }\r\n\r\n// export default App; \r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport Header from './components/Layout/Header';\r\nimport Sidebar from './components/Layout/Sidebar';\r\nimport ChatInterface from './components/Chat/ChatInterface';\r\nimport ChatInterface_2 from './components/Chat/ChatInterface_2';\r\nimport { SidebarPage1Extra, SidebarPage2Extra } from './components/Chat/ChatInterface';\r\nimport './styles/App.css';\r\n\r\nfunction App() {\r\n  const [activePage, setActivePage] = useState('page1');\r\n  const [showSidebarOnChat1, setShowSidebarOnChat1] = useState(false);\r\n  \r\n  // activePage가 변경될 때마다 확인\r\n  useEffect(() => {\r\n    // page2가 선택된 경우에만 ChatInterface의 사이드바를 표시\r\n    setShowSidebarOnChat1(activePage === 'page2');\r\n  }, [activePage]);\r\n\r\n  const getCurrentPageComponent = () => {\r\n    if (activePage === 'page1') {\r\n      // showSidebarOnChat1이 true일 때만(즉, page2가 선택되었을 때만) SidebarContent 표시\r\n      return <ChatInterface \r\n               serviceId=\"page1\" \r\n               SidebarContent={showSidebarOnChat1 ? <SidebarPage2Extra /> : null}\r\n             />;\r\n    } else if (activePage === 'page2') {\r\n      return <ChatInterface_2 \r\n               serviceId=\"page2\"\r\n               SidebarContent={<SidebarPage2Extra />}\r\n             />;\r\n    }\r\n    return null;\r\n  };\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      <Header />\r\n      <div className=\"content\">\r\n        {/* ✅ serviceId & 페이지 전환 props 전달 */}\r\n        <Sidebar\r\n          serviceId={activePage}\r\n          onSelectPage={setActivePage}\r\n          activePage={activePage}\r\n        />\r\n\r\n        <main className=\"main-content\">\r\n          {getCurrentPageComponent()}\r\n        </main>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\n// import React, { useState } from 'react';\r\n// import Header from './components/Layout/Header';\r\n// import Sidebar from './components/Layout/Sidebar';\r\n// // import ChatInterface from './components/Chat/ChatInterface';\r\n// import ChatInterface_2 from './components/Chat/ChatInterface_2';\r\n// import ChatInterface, {\r\n//   SidebarPage1Extra\r\n// } from './components/Chat/ChatInterface';\r\n// // import SidebarPage1Extra from './components/Sidebar/SidebarPage1Extra';\r\n// // import SidebarPage2Extra from './components/Sidebar/SidebarPage2Extra';\r\n\r\n// const App = () => {\r\n//   const [activePage, setActivePage] = useState('page1');\r\n\r\n//   return (\r\n//     <div className=\"app\">\r\n//       <Header />\r\n//       <div className=\"content\">\r\n//         {/* 페이지 메뉴 및 설정 */}\r\n//         <Sidebar\r\n//           serviceId={activePage}\r\n//           activePage={activePage}\r\n//           onSelectPage={setActivePage}\r\n//         />\r\n\r\n//         {/* 메인 콘텐츠 영역 */}\r\n//         <main className=\"main-content\">\r\n//           {activePage === 'page1' && (\r\n//             <ChatInterface\r\n//               serviceId=\"page1\"\r\n//               SidebarContent={<SidebarPage1Extra serviceId=\"page1\" />}\r\n//             />\r\n//           )}\r\n//           {activePage === 'page2' && (\r\n//             <ChatInterface_2\r\n//               serviceId=\"page2\"\r\n//               // SidebarContent={<SidebarPage2Extra serviceId=\"page2\" />}\r\n//             />\r\n//           )}\r\n//         </main>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}